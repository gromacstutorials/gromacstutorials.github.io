.. _solvation-energy-label:

Molecule solvation energy
*************************

.. container:: hatnote

    Free energy solvation calculation of a
    disk-like molecule

.. figure:: figures/solvationenergy/minimize-light.png
    :alt: HBC (graphene-like) molecule in water
    :class: only-light
    :height: 250
    :align: right

.. figure:: figures/solvationenergy/minimize-dark.png
    :alt: HBC (graphene-like) molecule in water
    :class: only-dark
    :height: 250
    :align: right

..  container:: justify

    The objective of this tutorial is to use GROMACS
    to perform a molecular dynamics simulation, and to
    calculate the free energy of solvation of a
    large molecule in water. 

    The large molecule used here is a graphene-like and disk-like molecule
    named hexabenzocoronene.

.. include:: ../contact/recommand-bulk.rst

.. include:: ../contact/needhelp.rst

Input files
===========

..  container:: justify

    Create two folders named 'preparation/' and
    'solvation' in the same directory, and go to
    'preparation/'.

    Download the configuration files for the HBC molecule
    by clicking |FJEW_allatom_optimised_geometry.pdb| (its from the |atb-HBC|),
    and place it in the 'preparation/' folder.

.. |FJEW_allatom_optimised_geometry.pdb| raw:: html

    <a href="../../../../inputs/solvationenergy/preparation/FJEW_allatom_optimised_geometry.pdb" target="_blank">here</a>

.. |atb-HBC| raw:: html

   <a href="https://atb.uq.edu.au/molecule.py?molid=151371#panel-md" target="_blank">atb</a>

Create the configuration file
-----------------------------

..  container:: justify

    First, let us convert the pdb file into a gro file
    within a box of finite size (4 nm by 4 nm by 4 nm) using trj conv:

..  code-block:: bw

    gmx trjconv -f FJEW_allatom_optimised_geometry.pdb -s FJEW_allatom_optimised_geometry.pdb -o hbc.gro -box 4 4 4 -center  

..  container:: justify

    Select 'system' for both centering and output.
    
    If you open the hbc.gro file with VMD, you will see:

.. figure:: figures/solvationenergy/hbc-light.png
    :alt: Gromacs initial configuration of HBC molecule
    :class: only-light
    :height: 250
    :align: center

.. figure:: figures/solvationenergy/hbc-dark.png
    :alt: Gromacs initial configuration of HBC molecule
    :class: only-dark
    :height: 250
    :align: center

    HBC molecule with carbon atoms in gray and hydrogen
    atoms in white.

..  container:: justify

    Alternatively, you can download the |solvation-hbc.gro|
    I have generated and continue with the tutorial.

.. |solvation-hbc.gro| raw:: html

    <a href="../../../../inputs/solvationenergy/preparation/hbc.gro" target="_blank">file</a>

Create the topology file
------------------------

..  container:: justify

    Copy the force field files (ITP file)in a folder named 'ff/' and located within
    the 'preparation/' folder. Force field parameters can be downloaded as a zip file by 
    clicking |ff-itp.zip|.

.. |ff-itp.zip| raw:: html

    <a href="../../../../inputs/solvationenergy/preparation/ff-itp.zip" target="_blank">here</a>

..  container:: justify

    All the files contained in the ff folder were downloaded from the |atb-HBC|.

    Then, let us write the topology file by simply
    creating a blank file named 'topol.top' within the
    'preparation/' folder, and copying in it:

..  code-block:: bw

    #include "ff/gromos54a7_atb.ff/forcefield.itp"
    #include "ff/FJEW_GROMACS_G54A7FF_allatom.itp"

    [ system ]
    Single HBC molecule

    [ molecules ]
    FJEW 1

Add the water
-------------

..  container:: justify

    Let us add water molecules to the system. First, download the tip4p
    water configuration file |tip4p.gro|,
    and copy it in the 'preparation/' folder. Then, in
    order to add (tip4p) water molecules to both gro and
    top file, use the gmx solvate command as follow:

..  code-block:: bw

    gmx solvate -cs tip4p.gro -cp hbc.gro -o solvated.gro -p topol.top

.. |tip4p.gro| raw:: html

    <a href="../../../../inputs/solvationenergy/preparation/tip4p.gro" target="_blank">here</a>

..  container:: justify

    You should see the following message:

..  code-block:: bw

    Processing topology
    Adding line for 2186 solvent molecules with resname (SOL) to topology file (topol.top)

..  container:: justify

    and a new line 'SOL 2186' in the topology file:

..  code-block:: bw

    [ molecules ]
    FJEW 1
    SOL 2186

..  container:: justify

    The created 'solvated.gro' file contains the positions
    of both HBC (called FJEW) and water molecules . Alternatively, you
    can download the file I have generated by clicking |solvated.gro|.

    The only missing information is the force field for
    the water molecule. In order to use the TIP4P/epsilon
    water model, which is one of the best classical water model, copy the
    |h2o.itp| file in the 'ff/' folder and modify the beginning of
    the topology file as follow:

..  code-block:: bw

    #include "ff/gromos54a7_atb.ff/forcefield.itp"
    #include "ff/FJEW_GROMACS_G54A7FF_allatom.itp"
    #include "ff/h2o.itp"

.. |solvated.gro| raw:: html

    <a href="../../../../inputs/solvationenergy/preparation/solvated.gro" target="_blank">here</a>

.. |h2o.itp| raw:: html

    <a href="../../../../inputs/solvationenergy/preparation/ff/h2o.itp" target="_blank">h2o.itp</a>

..  container:: justify

    The system is ready, let us equilibrate it before measuring the solvation energy of the 
    HBC molecule. 

Energy minimization
===================

..  container:: justify

    Create a new folder in the preparation/' folder, call
    it 'inputs', and save a new blank file, called
    min.mdp, in it. Copy the following lines into min.mdp:

..  code-block:: bw

    integrator = steep
    nsteps = 50

    nstxout = 10

    cutoff-scheme = Verlet
    nstlist = 10
    ns_type = grid

    couple-intramol=yes

    vdw-type = Cut-off
    rvdw = 1.2

    coulombtype = pme
    fourierspacing = 0.1
    pme-order = 4
    rcoulomb = 1.2

    constraint-algorithm = lincs
    constraints = hbonds

..  container:: justify

    All these lines have been seen in the first
    tutorial (:ref:`bulk-solution-label`). In short, this script will perform a
    steepest descent by updating the atom positions
    according to the largest forces directions, until
    the energy and maximum force reach a reasonable
    value. 
    
    Apply the minimisation to the solvated box using:

..  code-block:: bash

    gmx grompp -f inputs/min.mdp -c solvated.gro -p topol.top -o min -pp min -po min -maxwarn 1
    gmx mdrun -v -deffnm min

..  container:: justify

    Here the '-maxwarn 1' allows us to perform the
    simulation despite GROMACS' warning about some force
    field issue. Since this is a tutorial and not actual
    research, we can safely ignore this warning.

    Let us visualize the atoms' trajectories during the
    minimization step using VMD by typing:

..  code-block:: bash

    vmd solvate.gro min.trr

..  container:: justify

    The final state looks like that:

.. figure:: figures/solvationenergy/minimize-light.png
    :alt: Gromacs HBC (graphene) molecule after minimisation in water
    :class: only-light
    :height: 400
    :align: center

.. figure:: figures/solvationenergy/minimize-dark.png
    :alt: Gromacs HBC (graphene) molecule after minimisation in water
    :class: only-dark
    :height: 400
    :align: center

    HBC molecule in water after
    energy minimization. Water is represented as a transparent field. 

Equilibration
=============

..  container:: justify

    Let us perform successively a NVT and a NPT relaxation. Copy the |solvation-nvt.mdp|
    and the |solvation-npt.mdp| files into the inputs folder, and run them both using:

.. |solvation-nvt.mdp| raw:: html

    <a href="../../../../inputs/solvationenergy/preparation/inputs/nvt.mdp" target="_blank">nvt.mdp</a>

.. |solvation-npt.mdp| raw:: html

    <a href="../../../../inputs/solvationenergy/preparation/inputs/npt.mdp" target="_blank">npt.mdp</a>

..  code-block:: bash

    gmx grompp -f inputs/nvt.mdp -c min.gro -p topol.top -o nvt -pp nvt -po nvt -maxwarn 1
    gmx mdrun -v -deffnm nvt
    gmx grompp -f inputs/npt.mdp -c nvt.gro -p topol.top -o npt -pp npt -po npt -maxwarn 1
    gmx mdrun -v -deffnm npt

..  container:: justify

    The simulation looks like that:

.. figure:: figures/solvationenergy/nvtnpt-light.webp
    :alt: Gromacs HBC (graphene) molecule during NVT and NPT equilibration
    :class: only-light
    :height: 400
    :align: center

.. figure:: figures/solvationenergy/nvtnpt-dark.webp
    :alt: Gromacs HBC (graphene) molecule during NVT and NPT equilibration
    :class: only-dark
    :height: 400
    :align: center

    Movie showing the motion of the atoms during the
    NVT and NPT equilibration steps. For clarity, the
    water molecules are represented as a continuum field.

..  container:: justify

    Here we use maxwarn 1 to disregard a GROMACS warning about the force field. If you 
    want to publish your research, don't ignore that warning lightly. 

Solvation energy measurement
============================

..  container:: justify

    We are done with the first equilibration of the
    system. We are now going to perform the solvation
    free energy calculation, for which 21 independent
    simulations will be performed.
     
..  container:: justify
     
    **Quick explanation of the procedure:** The
    interactions between the HBC molecule and water
    are progressively turned-off, thus effectively
    mimicking the HBC molecule moving from bulk water
    to vacuum.

..  container:: justify

    Within the 'solvation/' folder, create an 'inputs/'
    folders. Copy the two following
    |solvation-nvt-bis.mdp| and |solvation-pro.mdp| files in it.

.. |solvation-nvt-bis.mdp| raw:: html

    <a href="../../../../inputs/solvationenergy/solvation/inputs/npt_bis.mdp" target="_blank">npt_bis.mdp</a>

.. |solvation-pro.mdp| raw:: html

    <a href="../../../../inputs/solvationenergy/solvation/inputs/pro.mdp" target="_blank">pro.mdp</a>

..  container:: justify

    Both files contain the following commands that are
    related to the free energy calculation:

..  code-block:: bw

    free_energy = yes
    vdw-lambdas = 0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0
    coul-lambdas = 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0
    sc-alpha = 0.5
    sc-power = 1
    init-lambda-state =  0
    couple-lambda0 = none
    couple-lambda1 = vdw-q
    nstdhdl = 100
    calc_lambda_neighbors = -1
    couple-moltype = FJEW

..  container:: justify

    These lines specify that the decoupling between the
    molecule of interest (here FJEW) and the rest of
    the system (here water) must be done by
    progressively turning off van der Waals and Coulomb
    interactions. The  parameter controls the frequency at
    which information are being printed in a xvg file during
    the production run.

    In addition, the stochastic integrator 'sd' is used
    instead of 'md', as it provides a better sampling,
    which is crutial here, particularly when the HBC
    and the water are not coupled.

    Copy as well the following |solvation-topol.top| file within the 'solvation/' folder (the only
    difference with the previous one if the path to the ff folder).

.. |solvation-topol.top| raw:: html

    <a href="../../../../inputs/solvationenergy/solvation/topol.top" target="_blank">topol.top</a>

..  container:: justify

    We need to create 21 folders, each containing the
    input files with different value of
    init-lambda-state (from 0 to 21). To do so, create
    a new bash file fine within the 'solvation/'
    folder, call it 'createfolders.sh' can copy the
    following lines in it:

..  code-block:: bw

    #/bin/bash
    # delete runall.sh if it exist, then re-create it
    if test -f "runall.sh"; then
        rm runall.sh
    fi
    touch runall.sh
    echo '#/bin/bash' >> runall.sh
    echo '' >> runall.sh
    # folder for analysis
    mkdir -p dhdl
    # loop on the 21 lambda state
    for state in $(seq 0 20); 
    do
        # create folder
        DIRNAME=lambdastate${state}
        mkdir -p $DIRNAME
        # copy the topology, inputs, and configuration file in the folder
        cp -r topol.top $DIRNAME
        cp -r ../preparation/npt.gro $DIRNAME/preparedstate.gro
        cp -r inputs $DIRNAME
        # replace the lambda state in both npt_bis and production mdp file
        newline='init-lambda-state = '$state
        linetoreplace=$(cat $DIRNAME/inputs/npt_bis.mdp | grep init-lambda-state)
        sed -i '/'"$linetoreplace"'/c\'"$newline" $DIRNAME/inputs/npt_bis.mdp
        sed -i '/'"$linetoreplace"'/c\'"$newline" $DIRNAME/inputs/pro.mdp
        # create a bash file to launch all the simulations
        echo 'cd '$DIRNAME >> runall.sh
        echo 'gmx grompp -f inputs/npt_bis.mdp -c preparedstate.gro -p topol.top -o npt_bis -pp npt_bis -po npt_bis -maxwarn 1' >> runall.sh
        echo 'gmx mdrun -v -deffnm npt_bis -nt 4' >> runall.sh
        echo 'gmx grompp -f inputs/pro.mdp -c npt_bis.gro -p topol.top -o pro -pp pro -po pro -maxwarn 1' >> runall.sh
        echo 'gmx mdrun -v -deffnm pro -nt 4' >> runall.sh
        echo 'cd ..' >> runall.sh
        echo '' >> runall.sh
        # create links for the analysis
        cd dhdl
        ln -sf ../$DIRNAME/pro.xvg md$state.xvg
        cd ..    
    done

..  container:: justify

    Change the '-nt 4' to use a different number of thread if necessary.

    Execute the bash script by typing:

..  code-block:: bash

    bash createfolders.sh

..  container:: justify

    The bash file creates 21 folders, each containing
    the input files with init-lambda-state from 0 to
    21, as well as a 'topol.top' file and a
    'preparedstate.gro' corresponding to the last
    state of the system simulated in the
    'preparation/' folder. Run all 21 simulations by executing the 'runall.sh' script:

..  code-block:: bash

    bash runall.sh

..  container:: justify

    This may take a while, depending on your computer.

    When the simulation is complete, go the dhdl folder, and type:

..  code-block:: bash

    gmx bar -f *.xvg

..  container:: justify

    The value of the solvation energy is printed in the terminal:

..  code-block:: bash

    total 0 - 20, DG -37.0 +/- 8.40

..  container:: justify

    The present simulations are too short to give a
    proper result. To actually measure the solvation
    energy of a molecule, use much longer equilibration
    (typically one nanosecond) and production runs
    (typically several nanoseconds).

.. include:: ../contact/contactme.rst
